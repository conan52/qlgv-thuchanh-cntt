@using System.Collections
@using TkbThucHanhCNTT.Models
@using TkbThucHanhCNTT.Models.Enums

@{
    this.ViewBag.Title = "Lịch thực hành";
}
@(this.Html.Kendo().Grid<LichThucHanh>()
      .Name("GridView")
      .Columns(columns =>
      {
          columns.ForeignKey(c => c.SttTuan, (IEnumerable)this.ViewData["Tuans"], dataFieldText: "SttTuan", dataFieldValue: "SttTuan").Filterable(false).Width(25);
          columns.ForeignKey(c => c.NgayTrongTuan, EnumUltils.GetDescriptions<NgayTrongTuan>(), dataFieldText: "Description", dataFieldValue: "Value").Filterable(false).Width(85);
          columns.Bound(e => e.TietBatDau).HeaderHtmlAttributes(new { colspan = 2 }).Title("Tiết học").Width(15);
          columns.Bound(e => e.TietKetThuc).HeaderHtmlAttributes(new { style = "display:none;" }).Width(15);
          columns.ForeignKey(c => c.TenLop, (IEnumerable)this.ViewData["Lops"], dataFieldText: "TenLop", dataFieldValue: "TenLop").Filterable(false);
          columns.ForeignKey(c => c.TenPhong, (IEnumerable)this.ViewData["Phongs"], dataFieldText: "TenPhong", dataFieldValue: "TenPhong").Filterable(false);

          columns.ForeignKey(c => c.MonHocId, (IEnumerable)this.ViewData["MonHocs"], dataFieldText: "TenThucHanh", dataFieldValue: "MonHocId").EditorTemplateName("MonHocId");
          columns.ForeignKey(c => c.Gvhd1, (IEnumerable)this.ViewData["GiangViens"], dataFieldText: "HoVaTen", dataFieldValue: "MaGv").EditorTemplateName("MaGvHd1");
          columns.ForeignKey(c => c.Gvhd2, (IEnumerable)this.ViewData["GiangViens"], dataFieldText: "HoVaTen", dataFieldValue: "MaGv").EditorTemplateName("MaGvHd2");
          columns.ForeignKey(c => c.Gvhd3, (IEnumerable)this.ViewData["GiangViens"], dataFieldText: "HoVaTen", dataFieldValue: "MaGv").EditorTemplateName("MaGvHd3");
          
          columns.Bound(e => e.Vang);
          columns.Bound(e => e.GhiChu);
          
          columns.Command(command =>
          {
              command.Destroy().Text(" ");
              //              command.Custom("DiemDanh").Text(" ").HtmlAttributes(new {@class = "asd"});
              command.Custom("DiemDanh").Text("<span class=\"k-icon k-si-plus\"></span>").Click("hienThiBangDiemDanh").HtmlAttributes(new { @class = "k-icon k-delete" });
          });
      })
      .Editable(e => e.Mode(GridEditMode.InCell))
      .Sortable()
      .Pageable(pageable =>
      {
          pageable.Refresh(true);
          pageable.PageSizes(true);
      })
      .Groupable(x => x.Messages(t => t.Empty("Kéo thả để gom nhóm dữ liệu")))
      .ColumnMenu(builder =>
      {
          builder.Filterable(false);
          builder.Sortable(false);
      })
//  .Scrollable()
      .DataSource(dataSource => dataSource
                                          .Ajax()
                                          .Batch(true)
                                          .PageSize(40)
                                          .Events(events =>
                                          {
                                              events.Error("error_handler");
                                              events.Change("onChange");
                                          })
                                          .Read(read => read.Action("AjaxReadData", "LichThucHanh"))
                                          .Create(update => update.Action("AjaxCreate", "LichThucHanh"))
                                          .Update(update => update.Action("AjaxUpdate", "LichThucHanh"))
                                          .Destroy(update => update.Action("AjaxDelete", "LichThucHanh"))
                                          .Model(model =>
                                          {
                                              model.Id(t => t.MaLichTh);
                                              model.Field(t => t.SttTuan).DefaultValue((int)this.ViewData["TuanMoiNhat"]);
                                              model.Field(t => t.TietBatDau).DefaultValue(1);
                                             // model.Field(t => t.MonHocId).DefaultValue(1);
                                              model.Field(t => t.TietKetThuc).DefaultValue(1);
                                          })).ToolBar(toolBar =>
                                          {
                                              toolBar.Template(@<text>
                                                  @item.CreateButton("Thêm")
                                                  @item.SaveButton("Lưu", "Hủy")
                                                  <a id='btnAutoGet' class='k-button k-button-icontext' href='#'><span class='k-icon k-scheduler'>  </span>Đồng bộ từ lịch giảng viên</a> 
                                                  <a id='btnCopy' class='k-button k-button-increase' href='#'><span class='k-icon k-add'></span>Sao chép tuần</a> 
                                                  <a id='btnAuto' class='k-button k-button-increase' href='#'><span class='k-icon k-add'></span>Tự phân công</a> 
                                                   <a id='btnPrint' class='k-button k-button-increase' href='#'><span class='k-icon k-i-calendar'></span>Xuất excel</a>
                                                  <div class="toolbar"><label class="category-label" for="category">Tuần:</label>
                                                  @(this.Html.Kendo().DropDownList()
                                                        .Name("DanhSachTuan")
                                                        .OptionLabel("Tất cả")
                                                        .AutoBind(false)
                                                        .Events(e => e.Change("onSelectedWeekChange"))
                                                        .DataSource(ds => ds.Read("LayDsTuan", "LichThucHanh")))
                                                  </div>
                                                  </text>);
                                          }))
<style>
    .toolbar
    {
        float: right;
    }
</style>
@(this.Html.Kendo().Window().Name("ThongTinDiemDanh")
      .Title("Điểm danh")
      .Visible(false)
      .Modal(true)
      .Draggable(false)
      .Width(300)
)
@(this.Html.Kendo().Window().Name("SaoChepTuan")
      .Title("Sao chép lịch thực hành")
      .Visible(false)
      .Modal(true)
      .Draggable(true)
      .Width(300)
      .Content(@<text>
    <table class="table table-hover">
    <tr>
    <td>
    Sao chép từ tuần
    </td>
    <td>
    @(this.Html.Kendo().DropDownList()
          .Name("tuTuan")
          .BindTo((IEnumerable)this.ViewData["TuanCoTkb"]));
    </td>
    </tr>
    <tr>
    <td>
    Đến tuần
    </td>
    <td>
    @(this.Html.Kendo().DropDownList()
          .Name("denTuan")
          .BindTo((IEnumerable)this.ViewData["TuanChuaCoTkb"]));
    </td>
    </tr>
    <tr>
    <td>
    &nbsp;
    </td>
    <td style="text-align: center">
    <a class="k-button k-button-icontext " onclick=" return SaoChepLichThucHanh(); "><span
    class="k-icon k-update"></span>Sao chép</a> <a class="k-button k-button-icontext"
    onclick=" $('#SaoChepTuan').data('kendoWindow').close(); "><span class="k-icon k-cancel">
    </span>Hủy bỏ</a>
    </td>
    </tr>
    </table>
    </text>)
)
@(this.Html.Kendo().Window().Name("XuatExcel")
      .Title("Xuất Excel")
      .Visible(false)
      .Modal(true)
      .Draggable(true)
      .Width(300)
      .Content(@<text>
    <table class="table table-hover">
    <tr>
    <td>
    Chọn tuần cần xuất
    </td>
    <td>
    @(this.Html.Kendo().DropDownList()
          .Name("tuanXuat")
          .BindTo((IEnumerable)this.ViewData["TuanCoTkb"]));
    </td>
    </tr>
    <tr>
    <td>
    &nbsp;
    </td>
    <td style="text-align: center">
    <a class="k-button k-button-icontext " onclick=" return XuatExcel(); "><span
    class="k-icon k-update"></span>Bắt đầu</a> <a class="k-button k-button-icontext"
    onclick=" $('#XuatExcel').data('kendoWindow').close(); "><span class="k-icon k-cancel">
    </span>Hủy bỏ</a>
    </td>
    </tr>
    </table>
    </text>)
)
@(this.Html.Kendo().Window().Name("TuPhanCong")
      .Title("Tự phân công GVHD")
      .Visible(false)
      .Modal(true)
      .Draggable(true)
      .Width(300)
      .Content(@<text>
    <table class="table">
    <tr>
    <td>
    Chọn tuần
    </td>
    <td>
    @(this.Html.Kendo().DropDownList()
          .Name("chonTuan")
          .BindTo((IEnumerable)this.ViewData["TuanCoTkb"]));
    </td>
    </tr>
    <tr>
    <td>
    &nbsp;
    </td>
    <td style="text-align: center">
    <a class="k-button k-button-icontext " onclick=" return TuPhanCong(); "><span class="k-icon k-update">
    </span>Phân công</a> <a class="k-button k-button-icontext" onclick=" $('#TuPhanCong').data('kendoWindow').close(); ">
    <span class="k-icon k-cancel"></span>Hủy bỏ</a>
    </td>
    </tr>
    </table>
    </text>)
)
<script type="text/x-kendo-template" id="template">
    <input type="hidden" id="MaLichTh" value="#=MaLichTh#" />
    <h4 style="text-align: center;">#=TenThucHanh#</h4>
    <table class="table table-bordered table-hover table-striped"  id="details-container" >
        <tr>
            <th>&nbsp;</th>
            <th>Giảng viên</th>
            <th>Có mặt</th>
        </tr>

        <tr>
            <td>GVHD1</td>
            <td>#:TenGv1#
            
            </td>
            <td>
                <input type="checkbox"   id="Gv1CoMat"   name="Gv1CoMat" #if (Gv1CoMat) {
                #checked#}# />
            </td>
        </tr>
        
        #if (TenGv2 != null) {#
        <tr>
            <td>GVHD2</td>
            <td>#:TenGv2#</td>
            <td>
                <input type="checkbox"  id="Gv2CoMat"  name="Gv2CoMat" #if (Gv2CoMat) {
                #checked#}# />
            </td>
        </tr>
        #}#
        #if (TenGv3 != null) {#
        <tr>
            <td>GVHD3</td>
            <td>#:TenGv3#</td>
            <td>
                <input type="checkbox" id="Gv3CoMat"  name="Gv3CoMat" #if (Gv3CoMat) {
                #checked#}# />
            </td>
        </tr>
        #}#
        <tr>
            <td colspan="3" style="text-align: center">
                <a  class="k-button k-button-icontext " onclick="return capNhatTinhTrangDiemDanh();">
                    <span class="k-icon k-update"></span>Cập nhật
                </a>
                <a class="k-button k-button-icontext"  onclick=" return closeDialog(); ">
                    <span class="k-icon k-cancel"></span>Hủy bỏ
                </a>
            
            </td>
        </tr>
    </table>
    
</script>
<script src="@this.Url.Content("~/Scripts/itdlu/lichthcascade.js")"></script>
<script type="text/javascript">
    function SaoChepLichThucHanh() {
        var tuTuan = $("#tuTuan").data('kendoDropDownList').value();
        var denTuan = $("#denTuan").data('kendoDropDownList').value();
        showLoadingDialog();
        $.post("@this.Url.Action("SaoChepLich", "LichThucHanh")", { tuTuan: tuTuan, denTuan: denTuan })
            .done(function(data) {
                hideLoadingDialog();
                $('#SaoChepTuan').data('kendoWindow').close();
                if (data.Result == "OK") {
                    ShowNotification("Sao chép thành công " + data.Message + " buổi học!", "info");
                    refreshData();
                } else {
                    ShowNotification(data.Message, "error");
                }
            });
    };
    
    function XuatExcel() {
       var tuanXuat = $("#tuanXuat").data('kendoDropDownList').value();

       window.open("@this.Url.Action("XuatExcel", "LichThucHanh")"+"/?tuanXuat="+tuanXuat, '_blank');
       $('#XuatExcel').data('kendoWindow').close();
    };
    
    function TuPhanCong() {
        var chonTuan = $("#chonTuan").data('kendoDropDownList').value();
        showLoadingDialog();
        $.post("@this.Url.Action("TuPhanCong", "LichThucHanh")", { chonTuan: chonTuan})
            .done(function(data) {
                hideLoadingDialog();
                $('#TuPhanCong').data('kendoWindow').close();
                if (data.Result == "OK") {
                    ShowNotification("Phân công thành công!", "info");
                    refreshData();
                } else {
                    ShowNotification(data.Message, "error");
                }
            });
    };
    
    function hienThiBangDiemDanh(e) {
        e.preventDefault();
        var detailsTemplate = kendo.template($("#template").html());
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#ThongTinDiemDanh").data("kendoWindow");
        
        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    };
    
    function closeDialog() {
        $("#ThongTinDiemDanh").data("kendoWindow").close();
    };
    
    function capNhatTinhTrangDiemDanh() {
        showLoadingDialog();
        closeDialog();
        var lichHocId = $("#MaLichTh").val();
        var gv1 = $('#Gv1CoMat').is(':checked');
        var gv2 = $('#Gv2CoMat').is(':checked');
        var gv3 = $('#Gv3CoMat').is(':checked');
        
        $.post("@this.Url.Action("DiemDanhGv", "LichThucHanh")", { lichHocId: lichHocId, gv1: gv1, gv2: gv2, gv3: gv3 })
            .done(function(data) {
                hideLoadingDialog();
                if (data.Result == "OK") {
                    ShowNotification("Thành công", "info");
                    refreshData();
                } else {
                    ShowNotification(data.Message, "error");
                }
            });
        
        return false;
    };
    
    function refreshData() {
        $('#GridView').data('kendoGrid').dataSource.read();
        $('#GridView').data('kendoGrid').refresh();
    };
    
    $("#btnAutoGet").bind("click", function() {
        showLoadingDialog();
        $.post("@this.Url.Action("DongBoLichThucHanh", "LichThucHanh")")
            .done(function(data) {
                hideLoadingDialog();
                if (data.Result == "OK") {
                    ShowNotification("Đã thêm <b>" + data.Message + "</b> buổi thực hành!", "info");
                    refreshData();
                } else {
                    ShowNotification(data.Message, "error");
                }
            });
    });
    
    $("#btnCopy").bind("click", function() {
        $("#SaoChepTuan").data("kendoWindow").center().open();
    });

    $("#btnPrint").bind("click", function() {
        $("#XuatExcel").data("kendoWindow").center().open();
    });


    $("#btnAuto").bind("click", function() {
        $("#TuPhanCong").data("kendoWindow").center().open();
    });
    
    function error_handler(e) {
        if (e.errors) {
            var message = "Lỗi:\n";
            $.each(e.errors, function(key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    };
    
    function onSelectedWeekChange() {
        var value = this.value(),
            grid = $("#GridView").data("kendoGrid");
        if (value && !isNaN(parseInt(value))) {
            grid.dataSource.filter({ field: "SttTuan", operator: "eq", value: parseInt(value) });
        } else {
            grid.dataSource.filter({});
        }
    };
</script>
