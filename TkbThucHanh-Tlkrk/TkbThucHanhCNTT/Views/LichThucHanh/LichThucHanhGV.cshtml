@using System.Collections
@using TkbThucHanhCNTT.Models
@using TkbThucHanhCNTT.Models.Enums
@using TkbThucHanhCNTT.Models.Ultils
@{
    ViewBag.Title = "Lịch thực hành";
    //Layout="~/Views/Shared/_LayoutLite.cshtml";
}

@(Html.Kendo().Grid<LichThucHanh>()
      .Name("GridView")
      .Columns(columns =>
      {
          columns.ForeignKey(c => c.SttTuan, (IEnumerable) ViewData["Tuans"], dataFieldText: "SttTuan", dataFieldValue: "SttTuan").Filterable(false).Width(25);
          columns.ForeignKey(c => c.NgayTrongTuan, EnumUltils.GetDescriptions<NgayTrongTuan>(), dataFieldText: "Description", dataFieldValue: "Value").Filterable(false).Width(85);
          columns.Bound(e => e.TietBatDau).HeaderHtmlAttributes(new {colspan = 2}).Title("Tiết học").Width(15);
          columns.Bound(e => e.TietKetThuc).HeaderHtmlAttributes(new {style = "display:none;"}).Width(15);
          columns.ForeignKey(c => c.TenLop, (IEnumerable) ViewData["Lops"], dataFieldText: "TenLop", dataFieldValue: "TenLop").Filterable(false);
          columns.ForeignKey(c => c.TenPhong, (IEnumerable) ViewData["Phongs"], dataFieldText: "TenPhong", dataFieldValue: "TenPhong").Filterable(false);

          columns.ForeignKey(c => c.MonHocId, (IEnumerable) ViewData["MonHocs"], dataFieldText: "TenThucHanh", dataFieldValue: "MonHocId").EditorTemplateName("MonHocId");
          columns.ForeignKey(c => c.Gvhd1, (IEnumerable) ViewData["GiangViens"], dataFieldText: "HoVaTen", dataFieldValue: "MaGv").EditorTemplateName("MaGvHd1");
          columns.ForeignKey(c => c.Gvhd2, (IEnumerable) ViewData["GiangViens"], dataFieldText: "HoVaTen", dataFieldValue: "MaGv").EditorTemplateName("MaGvHd2");
          columns.ForeignKey(c => c.Gvhd3, (IEnumerable) ViewData["GiangViens"], dataFieldText: "HoVaTen", dataFieldValue: "MaGv").EditorTemplateName("MaGvHd3");

          columns.Bound(e => e.Vang);
          columns.Bound(e => e.GhiChu);

          columns.Command(command => { command.Custom("DiemDanh").Text("<span class=\"k-icon k-si-plus\"></span>").Click("hienThiBangDiemDanh").HtmlAttributes(new {@class = "k-icon k-delete"}); });
      })
      .Sortable()
      .Pageable(pageable =>
      {
          pageable.Refresh(true);
          pageable.PageSizes(true);
      })
      .Groupable(x => x.Messages(t => t.Empty("Kéo thả để gom nhóm dữ liệu")))
      .ColumnMenu(builder =>
      {
          builder.Filterable(false);
          builder.Sortable(false);
      })
//  .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Batch(true)
          .PageSize(StaticValue.PageNumber)
          .Events(events => { events.Error("error_handler"); })
          .Read(read => read.Action("AjaxReadData_Limit", "LichThucHanh"))
          .Model(model => { model.Id(t => t.MaLichTh); })).ToolBar(toolBar =>
          {
              toolBar.Template(@<text>
                                    <div class="toolbar"><label class="category-label" for="category">Tuần:</label>
                                        @(Html.Kendo().DropDownList()
                                              .Name("DanhSachTuan")
                                              .Events(e => e.Change("onSelectedWeekChange"))
                                              .DataSource(ds => ds.Read("LayDsTuan", "LichThucHanh"))
                                              .Value(ViewData["TuanGanNhat"].ToString()))
                                    </div>
                                </text>);
          }))
<style>
    .toolbar { float: right; }
</style>
@(Html.Kendo().Window().Name("ThongTinDiemDanh")
      .Title("Đánh dấu giảng viên vắng")
      .Visible(false)
      .Modal(true)
      .Draggable(false)
      .Width(300))

<script type="text/x-kendo-template" id="template">
    <input type="hidden" id="MaLichTh" value="#=MaLichTh#" />
    <h4 style="text-align: center;">#=TenThucHanh#</h4>
    <table class="table table-bordered table-hover table-striped"  id="details-container" >
        <tr>
            <th>&nbsp;</th>
            <th>Giảng viên</th>
            <th>Có mặt</th>
        </tr>

        <tr>
            <td>GVHD1</td>
            <td>#:TenGv1#
            
            </td>
            <td>
                <input type="checkbox"   id="Gv1CoMat"   name="Gv1CoMat" #if (Gv1CoMat) {
                #checked#}# />
            </td>
        </tr>
        
        #if (TenGv2 != null) {#
        <tr>
            <td>GVHD2</td>
            <td>#:TenGv2#</td>
            <td>
                <input type="checkbox"  id="Gv2CoMat"  name="Gv2CoMat" #if (Gv2CoMat) {
                #checked#}# />
            </td>
        </tr>
        #}#
        #if (TenGv3 != null) {#
        <tr>
            <td>GVHD3</td>
            <td>#:TenGv3#</td>
            <td>
                <input type="checkbox" id="Gv3CoMat"  name="Gv3CoMat" #if (Gv3CoMat) {
                #checked#}# />
            </td>
        </tr>
        #}#
        <tr>
            <td colspan="3" style="text-align: center">
                <a  class="k-button k-button-icontext " onclick="return capNhatTinhTrangDiemDanh();">
                    <span class="k-icon k-update"></span>Cập nhật
                </a>
                <a class="k-button k-button-icontext"  onclick=" return closeDialog(); ">
                    <span class="k-icon k-cancel"></span>Hủy bỏ
                </a>
            
            </td>
        </tr>
    </table>
    
</script>
<script src="@Url.Content("~/Scripts/itdlu/lichthcascade.js")"></script>
<script type="text/javascript">
    function SaoChepLichThucHanh() {
        var tuTuan = $("#tuTuan").data('kendoDropDownList').value();
        var denTuan = $("#denTuan").data('kendoDropDownList').value();
        showLoadingDialog();
        $.post("@Url.Action("SaoChepLich", "LichThucHanh")", { tuTuan: tuTuan, denTuan: denTuan })
            .done(function(data) {
                hideLoadingDialog();
                $('#SaoChepTuan').data('kendoWindow').close();
                if (data.Result == "OK") {
                    ShowNotification("Sao chép thành công " + data.Message + " buổi học!", "info");
                    refreshData();
                } else {
                    ShowNotification(data.Message, "error");
                }
            });
    };

    function XuatExcel() {
        var tuanXuat = $("#tuanXuat").data('kendoDropDownList').value();

        window.open("@Url.Action("XuatExcel", "LichThucHanh")" + "/?tuanXuat=" + tuanXuat, '_blank');
        $('#XuatExcel').data('kendoWindow').close();
    };


    function hienThiBangDiemDanh(e) {
        e.preventDefault();
        var detailsTemplate = kendo.template($("#template").html());
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#ThongTinDiemDanh").data("kendoWindow");

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    };

    function closeDialog() {
        $("#ThongTinDiemDanh").data("kendoWindow").close();
    };

    function capNhatTinhTrangDiemDanh() {
        showLoadingDialog();
        closeDialog();
        var lichHocId = $("#MaLichTh").val();
        var gv1 = $('#Gv1CoMat').is(':checked');
        var gv2 = $('#Gv2CoMat').is(':checked');
        var gv3 = $('#Gv3CoMat').is(':checked');

        $.post("@Url.Action("DiemDanhGv", "LichThucHanh")", { lichHocId: lichHocId, gv1: gv1, gv2: gv2, gv3: gv3 })
            .done(function(data) {
                hideLoadingDialog();
                if (data.Result == "OK") {
                    ShowNotification("Thành công", "info");
                    refreshData();
                } else {
                    ShowNotification(data.Message, "error");
                }
            });

        return false;
    };

    function refreshData() {
        $('#GridView').data('kendoGrid').dataSource.read();
        $('#GridView').data('kendoGrid').refresh();
    };


    $("#btnPrint").bind("click", function() {
        $("#XuatExcel").data("kendoWindow").center().open();
    });


    function error_handler(e) {
        if (e.errors) {
            var message = "Lỗi:\n";
            $.each(e.errors, function(key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    };

    function onSelectedWeekChange() {
        var value = this.value(),
            grid = $("#GridView").data("kendoGrid");
        if (value && !isNaN(parseInt(value))) {
            grid.dataSource.filter({ field: "SttTuan", operator: "eq", value: parseInt(value) });
        } else {
            grid.dataSource.filter({});
        }
    };
</script>