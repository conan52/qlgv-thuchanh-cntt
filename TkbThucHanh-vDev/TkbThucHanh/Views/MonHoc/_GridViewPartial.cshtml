@using System.Web.UI.WebControls
@using TkbThucHanh.Models.Enums
@{
    GridViewExtension grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new {Controller = "MonHoc", Action = "GridViewPartial"};

        settings.SettingsEditing.AddNewRowRouteValues = new {Controller = "MonHoc", Action = "GridViewPartialAddNew"};
        settings.SettingsEditing.UpdateRowRouteValues = new {Controller = "MonHoc", Action = "GridViewPartialUpdate"};
        settings.SettingsEditing.DeleteRowRouteValues = new {Controller = "MonHoc", Action = "GridViewPartialDelete"};
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
        settings.SettingsBehavior.ConfirmDelete = true;


        settings.Width = Unit.Percentage(90);
        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.SettingsPopup.EditForm.Width = 600;
        settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.Center;
        settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.Middle;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.NewButton.Visible = false;
        settings.CommandColumn.DeleteButton.Visible = true;
        settings.CommandColumn.EditButton.Visible = true;

        settings.KeyFieldName = "MonHocId";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        settings.Columns.Add(column =>
        {
            column.FieldName = "MaMonHoc";
            column.Caption = "Mã môn học";
        });


        settings.Columns.Add(column =>
        {
            column.FieldName = "TenMonHoc";
            column.Caption = "Tên môn học";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "SoTinChi";
            column.Caption = "Số tín chỉ";
            column.ShowInFilterControl = false;
            column.Settings.AllowAutoFilter = DefaultBoolean.False;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinProperties = column.PropertiesEdit as SpinEditProperties;
            spinProperties.MinValue = 0;
            spinProperties.MaxValue = 10;
            spinProperties.SpinButtons.ShowLargeIncrementButtons = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "ChuyenNganh";
            column.Caption = "Chuyên ngành";

            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DataSource = EnumUltils.GetDescriptions_ChuyenNganh();

                comboBoxProperties.TextField = "Description";
                comboBoxProperties.ValueField = "Value";

                comboBoxProperties.ValueType = typeof (int);
            }
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "TrinhDo";
            column.Caption = "Trình độ";

            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DataSource = EnumUltils.GetDescriptions_TrinhDo();
                comboBoxProperties.TextField = "Description";
                comboBoxProperties.ValueField = "Value";

                comboBoxProperties.ValueType = typeof (int);
            }
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "BatBuoc";
            column.Caption = "Bắt buộc";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string) ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()