@using System.Linq
@using TkbThucHanh.Models
@using TkbThucHanh.Models.Provider
@using TkbThucHanh.ViewSettings
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "ThoiKhoaBieuGiangVien", Action = "GridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ThoiKhoaBieuGiangVien", Action = "GridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ThoiKhoaBieuGiangVien", Action = "GridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ThoiKhoaBieuGiangVien", Action = "GridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.SettingDefaultColumn();

        settings.KeyFieldName = "MaTkb";


        settings.Columns.Add(column =>
        {
            column.Width = 50;
            column.Caption = "Tuần";
            column.FieldName = "TuanHoc";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DataSource = DataProvider<TuanHoc>.GetAll().Select(t => t.SttTuan);
            }
        });

        settings.Columns.Add(column =>
        {
            column.Width = 70;
            column.Caption = "Thứ";
            
            column.FieldName = "Thu";
            column.ReadOnly = true;
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.ShowInFilterControl = false;
            column.ShowInCustomizationForm = false;
            
        });

        settings.Columns.Add(column =>
        {
            column.Width = 65;
            column.FieldName = "NgayHoc";
            column.Caption = "Ngày học";

            
            
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            var editboxprop = column.PropertiesEdit as DateEditProperties;
            editboxprop.NullText = "dd/MM/yyyy";
            editboxprop.EditFormat = EditFormat.Custom;
            editboxprop.EditFormatString = "dd/MM/yyyy";
            editboxprop.DisplayFormatString = "dd/MM";
        });

        settings.Columns.Add(column =>
        {
            column.Width = 75;
            column.FieldName = "LopHoc";
            column.Caption = "Lớp";

            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                comboBoxProperties.DropDownStyle = DropDownStyle.DropDown;

                comboBoxProperties.DataSource = LopProvider.LayDsLopChuaRaTruong();
                comboBoxProperties.ValueField = "TenLop";
                comboBoxProperties.TextField = "TenLop";
                comboBoxProperties.ValueType = typeof(string);
            }
        });

        settings.Columns.Add(column =>
        {
            column.Width = 140;
            column.Caption = "Giảng viên";
            column.FieldName = "MaGv";
          
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                //comboBoxProperties.DataSource = GiangVienProvider.LayDsGiangVienCoTKB();
                comboBoxProperties.DataSource = GiangVienProvider.LayDsGiangVienCoTheXep();
                comboBoxProperties.ValueField = "MaGv";
                comboBoxProperties.TextField = "HoVaTen";
            }
        });


        settings.Columns.Add(column =>
        {
           // column.Width = 260;
            column.FieldName = "TenMonHoc";
            column.Caption = "Môn học";
 

           
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                comboBoxProperties.DropDownStyle = DropDownStyle.DropDown;

                comboBoxProperties.DataSource = DataProvider<MonHoc>.GetAll().Select(m => m.TenMonHoc).Distinct();
                comboBoxProperties.ValueType = typeof(string);
            }
        });
        settings.Columns.Add(column =>
        {
            column.Width = 90;
            column.FieldName = "Phong";
            column.Caption = "Phòng học";

            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                comboBoxProperties.DropDownStyle = DropDownStyle.DropDown;

                comboBoxProperties.DataSource = DataProvider<PhongThucHanh>.GetAll().Select(l => l.TenPhong).Distinct();
                comboBoxProperties.ValueType = typeof(string);
            }
        });

        settings.Columns.Add(column =>
        {
            column.Width = 75;
            column.FieldName = "TietBatDau";
            column.Caption = "Bắt đầu";

            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DropDownStyle = DropDownStyle.DropDownList;
                comboBoxProperties.DataSource = Enumerable.Range(1, 13);
                comboBoxProperties.ValueType = typeof(int);
            }
        });
        settings.Columns.Add(column =>
        {
            column.Width = 75;
            column.FieldName = "TietKetThuc";
            column.Caption = "Kết thúc";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DropDownStyle = DropDownStyle.DropDownList;
                comboBoxProperties.DataSource = Enumerable.Range(1, 13);
                comboBoxProperties.ValueType = typeof(int);
            }
        });
        settings.SetCommandColumn();

    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()