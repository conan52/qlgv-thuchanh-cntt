@using TkbThucHanh.Models
@using TkbThucHanh.Models.Enums
@using TkbThucHanh.Models.Provider
@using TkbThucHanh.ViewSettings
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "PhanCongGiangDay", Action = "GridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "PhanCongGiangDay", Action = "GridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "PhanCongGiangDay", Action = "GridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "PhanCongGiangDay", Action = "GridViewPartialDelete" };
        settings.KeyFieldName = "IdPhanCong";
        settings.SettingDefaultColumn();
        
        settings.Columns.Add(column =>
        {
            column.Caption = "Năm học";
            column.FieldName = "NamHoc";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinotp = column.PropertiesEdit as SpinEditProperties;
            if (spinotp != null)
            {
                spinotp.MinValue = DateTime.Now.Year - 1;
                spinotp.MaxValue = DateTime.Now.Year + 10;
                spinotp.SpinButtons.ShowLargeIncrementButtons = false;
            }
        });
        settings.Columns.Add(column =>
        {
            column.Caption = "Học kỳ";
            column.FieldName = "HocKy";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DataSource = Enumerable.Range(1,3);
                
                comboBoxProperties.ValueType = typeof(int);
            }
        });

        settings.Columns.Add(column =>
        {
            column.Caption ="Môn học";
            column.FieldName = "MonHocId";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DataSource = DataProvider<MonHoc>.GetAll();
                comboBoxProperties.ValueField = "MonHocId";
                comboBoxProperties.TextField = "TenMonHoc";

                comboBoxProperties.ValueType = typeof(int);
            }
        });

        settings.Columns.Add(column =>
        {
            column.Caption = "Giảng viên";
            column.FieldName = "GiangVienId";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DataSource = DataProvider<GiangVien>.GetAll();
                comboBoxProperties.ValueField = "GiangVienId";
                comboBoxProperties.TextField = "HoVaTen";

                comboBoxProperties.ValueType = typeof(int);
            }
        });

        settings.Columns.Add(column =>
        {
            column.Caption = "Lớp";
            column.FieldName = "LopId";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            if (comboBoxProperties != null)
            {
                comboBoxProperties.DataSource = DataProvider<Lop>.GetAll();
                comboBoxProperties.ValueField = "LopId";
                comboBoxProperties.TextField = "TenLop";

                comboBoxProperties.ValueType = typeof(int);
            }
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()